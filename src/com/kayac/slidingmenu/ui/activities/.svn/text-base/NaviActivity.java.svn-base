package com.kayac.canary.ui.activities;

import android.app.Dialog;
import android.content.Intent;
import android.graphics.BitmapFactory;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentTransaction;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.WindowManager;
import android.widget.TextView;
import android.widget.Toast;

import com.kayac.canary.R;
import com.kayac.canary.ui.fragments.NVMainFragment;
import com.kayac.canary.ui.fragments.NVPartnerSearchFragment;
import com.kayac.canary.ui.fragments.NVRouterBoxFragment;
import com.kayac.canary.ui.fragments.NVRouterShopFragment;
import com.kayac.canary.ui.views.DraggableLayout;
import com.kayac.canary.ui.views.DraggableLayout.SidingListenerInterface;

/**
 * This activity acts like a holder activity for side-panel enabled fragments
 * 
 * @author long-nguyen
 * 
 */
public class NaviActivity extends FragmentActivity {
	public static final boolean DEBUG = true;
	public static final String TAG = NaviActivity.class.getSimpleName();
	public static final int REQUEST_CODE_LOGIN = 0x01;
	protected static final String EXTRA_SELECTING_ITEM="saved_selecting_item";

	private int[] mButtonId={
			R.id.nav_about_bt,
			R.id.nav_main_bt,
			R.id.nav_routerbox_bt,
			R.id.nav_routershop_bt,
			R.id.nav_search_partner_bt,
			R.id.nav_logout_bt
	};
	private int[] mMessageID = { 
			R.msg.msg_navigate_about,
			R.msg.msg_navigate_main,
			R.msg.msg_navigate_routerbox, 
			R.msg.msg_navigate_routershop,
			R.msg.msg_navigate_search,
			R.msg.msg_navigate_logout};
	
	private DraggableLayout mDraggableLayout;
	public onReceiveMessageInterface msgReceivedListener;
	
	
	@Override
	public void onCreate(Bundle savedInstanceState) {
		//TODO: Lets check if this activity is destroyed by system!!!(remember)
		super.onCreate(savedInstanceState);
		setContentView(R.layout.navi_activity);
		initView();
		msgReceivedListener=new onReceiveMessageInterface() {
			@Override
			public void onReceiveMessage(int msgId) {
				doHandleMessage(msgId);
			}
		};
		switchPanel(null);
	}
	
	
	private void initView() {
		//Add message list for menu buttons
		for(int i=0;i<mButtonId.length;i++){
			TextView tv=(TextView) findViewById(mButtonId[i]);
			tv.setTag(i+"");
			findViewById(mButtonId[i]).setOnClickListener(new View.OnClickListener() {
				@Override
				public void onClick(View view) {
					int pos=Integer.parseInt(view.getTag().toString());
					doHandleMessage(mMessageID[pos]);
				}
			});
		}
		mDraggableLayout = (DraggableLayout) findViewById(R.id.navi_draggable_layout);
		mDraggableLayout.setShadowBitmap(BitmapFactory.decodeResource(getResources(), R.drawable.img_shadow_right));
	}
	
	@Override
	public void onBackPressed() {
		if(!mDraggableLayout.isOpeningSlideMenu()){
			mDraggableLayout.invokeScrollAction(null);
		}else{ 
			showQuitDialog();
		}
	}


	private void showQuitDialog() {
		final Dialog dialog = new Dialog(this, android.R.style.Theme_Translucent_NoTitleBar);
		dialog.getWindow().addFlags(WindowManager.LayoutParams.FLAG_DIM_BEHIND);
		dialog.getWindow().getAttributes().windowAnimations = R.style.Animations_Fading;
		dialog.getWindow().getAttributes().dimAmount = 0.6f;
		dialog.setContentView(R.layout.quit_dialog);
		dialog.findViewById(R.id.ok_bt).setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				dialog.dismiss();
				finish();
			}
		});
		dialog.findViewById(R.id.cancel_bt).setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				dialog.dismiss();
			}
		});
		dialog.show();		
	}

	
	// ------------------------------------------------------------------------
	public boolean doHandleMessage(int what) {
		switch (what) {
		case R.msg.msg_open_navi_panel:
			mDraggableLayout.invokeScrollAction(null);
			return true;
		case R.msg.msg_navigate_routerbox:
			switchPanel(new NVRouterBoxFragment());
			return true;
		case R.msg.msg_navigate_main:
			switchPanel(new NVMainFragment());
			return true;
		case R.msg.msg_navigate_routershop:
			switchPanel(new NVRouterShopFragment());
			return true;
		case R.msg.msg_navigate_search:
			switchPanel(new NVPartnerSearchFragment());
			return true;
		case R.msg.msg_navigate_about:
			startActivity(new Intent(this,AboutActivity.class));
			return true;
		case R.msg.msg_navigate_logout:
			Toast.makeText(this, "Logged out", Toast.LENGTH_SHORT).show();
			return true;
		default:
			return false;
		}
	}

	private void switchPanel(final Fragment newFm) {
		if(getSupportFragmentManager().findFragmentById(R.id.navi_draggable_layout)==null){
			//Add first fragment
			NVMainFragment mainFm =new NVMainFragment();
			FragmentTransaction ft = getSupportFragmentManager().beginTransaction();
            ft.add(R.id.navi_draggable_layout, mainFm).commit();
			return;
		}

		//Check if there is a fragment available, tell it to update before replaced
		final String fragmentName=newFm.getClass().getSimpleName();
		final Fragment child=getSupportFragmentManager().findFragmentById(R.id.navi_draggable_layout);
		if(child!=null&&child.getClass().getSimpleName().equals(fragmentName)){
			((onReplacePanelInterface)child).onReplacePanelCallback();
		}
		
		//Do scroll, afterthat, lets change fragment
		mDraggableLayout.invokeScrollAction(new SidingListenerInterface() {
			@Override
			public void onSlideFinished() {
				if (!fragmentName.equals(child.getClass().getSimpleName())) {	
					FragmentTransaction ft = getSupportFragmentManager().beginTransaction();
					ft.setCustomAnimations(R.anim.splashfadein, R.anim.splashfadeout);
					ft.replace(R.id.navi_draggable_layout, newFm);
					ft.commit();
				}
			}
		});
	}
	
	/**
	 * This interface should be implemented by navi fragment, for handling clean up before being destroyed. 
	 */
	public interface onReplacePanelInterface{
		public void onReplacePanelCallback();
	}
	
	/**
	 * This interface is implemented by NaviActivity,so that it could receive message from its child-fragment( e.g navigation)
	 */
	public interface onReceiveMessageInterface {
        public void onReceiveMessage(int msgId);
    }
}
